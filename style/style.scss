$colors: (black: #272a31, red: #ec5242, grey: #d3d3d3, white:#ffffff);
@import 'reset';

@each $color, $code in $colors {
  .bg-#{$color} {
    background-color: $code;
  }

  .text-#{$color} {
    color: $code;
  }
}

$displays : (flex, block, none, inline);
@mixin display($list, $screen) {
  @each $type in $list{
    .d-#{$type}#{$screen} {
      display: $type;
    }
  }
}

@include display($displays, '');

@mixin generator($class, $times, $type){
  @for $i from 0 to $times + 1 {
    .#{$class}-#{$i} {
      #{$type}: 0.25rem * $i;
    }
    @media screen and (min-width: 768px) {
      @for $i from 0 to $times + 1 {
        .#{$class}-lg-#{$i} {
          #{$type}: 0.25rem * $i;
        }
      }
    }
  }
}

@include generator(p, 7, padding);
@include generator(m, 12, margin);

$flex-position: (center, flex-end, flex-start);
$flex-spacing: (space-between , space-around, space-evenly);

@each $type in $flex-position {
  .justify-#{$type} {
    justify-content: $type;
  }
  
  .align-items-#{$type} {
    align-items: $type;
  }
  .align-self-#{$type} {
    align-self: $type;
  }
}

@each $type in $flex-spacing {
  .justify-#{$type} {
    justify-content: $type;
  }
  
  .align-items-#{$type} {
    align-items: $type;
  }
}



.bold {
  font-weight: 700;
}

.bigger {
  font-size: 150%;
}

.smaller {
  font-size: 70%;
}

.transparent {
  background: transparent;
}

.w-100 {
  width: 100%;
  flex-basis: 100%;
}

.s-30 {
  width: 30px;
  height: 30px;
}

.menu-btn + div {
  display: none;
}

.menu-btn:hover + div{
  display: block;
}

@media screen and (min-width:768px){
  @include display($displays, '-lg');
  .entrance {
    top: 0;
  }
  @each $type in $flex-position {
    .justify-#{$type}-lg {
      justify-content: $type;
    }
    
    .align-items-#{$type}-lg {
      align-items: $type;
    }
  }

  .bigger-lg {
    font-size: 150%;
  }
}
